import { useEffect, useState } from 'react';

function App() {
  const [userName, setUserName] = useState<string | null>(null);
  const [error, setError] = useState(false);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ Telegram
    if (typeof window !== 'undefined' && window.Telegram?.WebApp) {
      const webApp = window.Telegram.WebApp;

      // –ì–æ–≤–æ—Ä–∏–º Telegram, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ
      webApp.ready();

      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const user = webApp.initDataUnsafe?.user;
      if (user?.first_name) {
        setUserName(user.first_name);
      } else {
        setError(true);
      }
    } else {
      // –ù–µ –≤ Telegram ‚Äî –æ—à–∏–±–∫–∞
      setError(true);
    }
  }, []);

  if (error) {
    return (
      <div style={{ padding: 20, textAlign: 'center' }}>
        <h2>‚ùå –û—à–∏–±–∫–∞</h2>
        <p>–ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–∑ Telegram!</p>
      </div>
    );
  }

  if (!userName) {
    return <div style={{ padding: 20, textAlign: 'center' }}>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
  }

  return (
    <div style={{ padding: 20, textAlign: 'center' }}>
      <h2>–ü—Ä–∏–≤–µ—Ç, {userName}!</h2>
      <p>–í—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ Mini App –≤ Telegram üéâ</p>
    </div>
  );
}

export default App;